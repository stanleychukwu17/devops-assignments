http {
    include       mime.types; # see explanation.txt 1.1
    default_type  application/octet-stream; # see explanation.txt 1.1

    upstream nodeapp_backend {
        # Load balancing between multiple backend servers
        server nodeapp1:9000;
        server nodeapp2:9000;
        server nodeapp3:9000;
        # Optional: Use least_conn or ip_hash if preferred
        # least_conn;
        # ip_hash;
    }

    server {
        listen 80;
        server_name stanleychukwu.com;  # Replace with your domain

        # Enable access logs for monitoring
        access_log /var/log/nginx/access.log;

        # Security headers to protect from common vulnerabilities
        # see explanation.txt 1.2
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options SAMEORIGIN;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy no-referrer-when-downgrade;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self';" always;

        # Redirect HTTP to HTTPS (if using SSL)
        # If you're using SSL, you should have a separate HTTPS server block as well
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        location / {
            # Reverse proxy to the backend
            proxy_pass http://nodeapp_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Set timeouts for backend communication
            proxy_read_timeout 90;
            proxy_connect_timeout 90;

            # Buffering settings for large responses
            proxy_buffers 16 4k;
            proxy_buffer_size 2k;
            proxy_busy_buffers_size 8k;
            proxy_max_temp_file_size 0;

            # Enable gzip for compression to reduce bandwidth usage
            gzip on;
            gzip_comp_level 5;
            gzip_types text/plain application/xml application/json text/css application/javascript;
            gzip_proxied any;
        }

        # Error handling
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Optional custom error page for 404 errors
        # error_page 404 /404.html;
        # location = /404.html {
        #     root /usr/share/nginx/html;
        # }
    }

    # Enable gzip compression for general traffic
    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain application/xml application/json text/css application/javascript;
    gzip_proxied any;

    # Disable access to hidden files (like .git, .env)
    location ~ /\. {
        deny all;
    }
}

worker_processes auto;

events {
    worker_connections 1024;  # Increase if you're expecting high traffic, 1024 is the default
}