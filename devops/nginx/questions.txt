full_revision: 15th mar 2025
full_revision: 15th mar 2025

=============
SECTION 1
=============
1.  Nginx
    - what is Nginx
    - talk about what a normal architecture look like vs what an Nginx architecture would look like
    - what are the following concepts/terms in Nginx? {Frontend, Backend, Upstream, Downstream}
    - Tell us about the 7 layers in OSI Model

2.  Talk about Layer 4 and Layer 7 proxying in Nginx (give examples for each)

3.  Talk about TLS termination and TLS passthrough in Nginx

{
    Tip: the docker container name is the same as the hostname if you do not provide a hostname
    if you do:
        docker run -p 80:80 --name nginx_container -d nginx:1.26.3
        the container name & hostname too will be nginx_container

    but if you can provide a custom hostname by doing:
        docker run -p 80:80 --name nginx_container --hostname nginx_load_balancer -d nginx:1.26.3
        now the container will be: nginx_container
        now the hostname will be: nginx_load_balancer
}
4.  Nginx Docker container {please write down the code and also practice it}
    - start a nginx container in detached mode using
        image: nginx:1.26.3
        container_name: nginx
        port 80:80
    - inspect the container
    - see the logs from the container
    - attach to the container
    - login into the container and see what it looks like

5.  Solving image one & two problem
    - Look at the image of the 2 nginx load balancers we will be creating
    - Create a node.js application to listen on port 9000
    - the application should console.log(the hostname)
    - create the docker image of the nodejs application
    - use the image to spin up 3 new containers and do not expose the ports, use names
      node_app1, node_app2, node_app3
    - Now write you Nginx configuration:
    - create upstream for the 3 node_app servers
    - create a server that listens on port 8080 and forward all request to the node upstream
    - spin up an Nginx container with the config we created, test to see that all is well
    - can you explain the code above
    Solve the problem of image 2

5. 

