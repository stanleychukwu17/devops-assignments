1. {
    1. on: push                                 {push request events:}

    2. on: pull_request                         {pull request events:}

    3. on: issues:      {issues events:}
                types: [opened, edited]

    4. on: workflow_dispatch:                   {Workflow Dispatch:}
                inputs:
                    example_input:
                        description: 'An example input'
                        required: true
                        default: 'default_value'

    5. on: deployment_status:
                types: [success, failure]

    6. on: repository_dispatch:                 {Custom Events:}
                types: [my_custom_event]

    7. on: release:                             {Release Event:}
                types: [created, published]

    8. on: schedule:                            {Schedule Events:}
                - cron: '0 0 * * *' # Runs daily at midnight

    9. on: dependabot:                          {Dependabot Events:}
                types: [pull_request]

    10. on: workflow_run:                       {Workflow Run Events:}
                workflows: ["Main Workflow"]
                types:
                    - completed

    11. on: create:                             {fork events:}
                tags: [fork]
}

2.
    1. what are they?
        Github workflows are workflows that run in response to certain events/actions within our code
        repository @ github, each workflow should have at-least 1-job and each job can have multiple steps,
        but should have at-least 1 step. and a step can either be a shell-command or an action from the
        github-actions community. Each job is associated with a runner, The runner is a basically a machine
        or a compute engine that can be connected to github . The runner will establish a session and each
        steps in a job will be processed by this runner. The runner works on the steps from top to bottom.
        Steps cannot run in parallel, but jobs can run in parallel(i.e concurrently)
    
    2.  - inside your code repo, create a folder called ".github"
        - inside the .github folder, create a folder called: "workflows"
        - inside the workflows folder, here you can create all your github-actions workflows .yaml files

    3. see ./tasks/2-hello-world.yml

