1. what are the events that can trigger a workflow run {try to name 4-10 events}
    see more details on the answers in ./tasks/1-event-triggers.txt

2. workflows
    1. what are they?
    2. how do you create a workflow and where do you save it?
    3. create a workflow called hello_world
        - let it have 2 jobs
        - the 1st job should have a step that says "hello world"
        - the 2nd job should have a step that says "bye world"
        - include {workflow_dispatch} so that we can click a button to re-run the job anytime
            we want to
    4. Explain what the "actions/checkout@v4" is doing in your workflow
    5. Read: read about some additional's you can do on your github-actions page on github 

3. You next task is to use github-actions to write a comment on newly created issues in
    our codebase/github-repo. Let the workflow have 2 jobs:
    1. should use community action to add a comment to the issue
    2. what is the | jq '.'? used in the github_action file
    3. use the github api to post a comment to the issue

4.
    1. Read: Some of the principles of Continuous Integration
    2. work on the workflow for a nodejs project, let it include testing
        2 jobs, 1. test, 2. lint
    3. work on the workflow for a golang project, let it include testing and test coverage report
        guide {
            - set the environment variables globally
                ENV, PORT, TIMEZONE, DB_NAME, POSTGRES_DB_USER, POSTGRES_DB_PASSWORD
            - should have 2 jobs
                1. log-the-env-variables
                2. test-golang-service
                    {steps}
                    - install docker
                    - checkout the branch
                    - setup your golang
                    - install go dependencies
                    - run go test with coverage output
                    - check the coverage out
        }
    4. how do you set rules in your repo so that push_request & pull_request will only
        pass when certain jobs are successful {You can go to your github account and demonstrate it}

5. take a look at this workflow the python/cpython workflow {
    https://github.com/python/cpython/blob/main/.github/workflows/build.yml#L46
    https://github.com/python/cpython/blob/main/.github/workflows/reusable-change-detection.yml
    https://github.com/python/cpython/blob/main/.github/workflows/reusable-windows-msi.yml
    https://github.com/python/cpython/blob/main/.github/workflows/stale.yml
}
