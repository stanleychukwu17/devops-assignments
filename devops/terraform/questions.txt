1. What is the core terraform workflow

2. Talk about terraform providers

3. Configure an aws provider with both access_key and secret_key

4.  What is a terraform block, arguments and label
    - Give an example

5. How do you initialize terraform in your project directory

6. Draw out the journey of creating an EC2 instance starting from a VPC

7. What is the syntax for creating a resource

8. what is a cidr_block

9. Create a VPC and add a Tag of Name to it

10. How do you preview changes in your main.tf
    - How do you apply the changes in your main.tf
    - How do you save the preview into a file
    - How do you apply the configuration from the save file

11. How do you skip the terminal asking you to enter yes when you run "terraform apply"
    - How do you format your .tf files to the standard terraform syntax
    - List all the ways you can use the fmt command (3 ways)
    - How do you validate the syntax and arguments in your terraform configuration

12. How do you destroy the infrastructure you built
    - destroy with auto approve
    - destroy only a particular resource
    - how do you replace only one resource on your existing infrastructure using the apply command

13. write a config file with 2 Subnets and let them be public by associating them to an internet gateway and a route table
    see both code for refreshment {
        D:\Sz - projects\28-devops\1-terraform\00-examples\1-aws-subnet-with-igw
        D:\Sz - projects\28-devops\1-terraform\00-examples\2-aws-subnet-using-a-load-balancer
    }

14. How do you declare a variable, what are the three arguments in a variable declaration.
    - And in what files do you store your variables

15. How do you force a replacement of your variables when running the terraform plan or terraform apply command

16. what can you say about terraform.tfvars file?
    - what is the difference btw terraform.tfvars and variables.tf

17. Create a production.tfvars file and use it to run the terraform apply command

18. How can you use the variables in your main.tf configuration file
    - How do you insert a variable in a string

19. Talk about variable precedence - how are they ranked in terms of which one gets applied

20. What is a route table and what is an internet gateway

21. what is an aws_security_group
    - difference btw aws_security_group & aws_default_security_group

22. add a variable to your variables.tf and terraform.tfvars file, name of the variable is
        general_public_address
    - use the variable to create an aws_security_group

23. Create an EC2 instance

24. How do you generate a ssh key pair from your linux command line

25. How do you set the ssh key permission to read only

26. use the ssh to create a resource key pair and use the key pair in your ec2 instance

27. login into your running ec2 instance using the ssh key that you generated

28. move the ssh file path to the variable file and use it in the aws_key_pair resource

29. What are data resources in terraform
    - use the data resource block to dynamically fetch the ami for an ec2 instance

30. what is the proper file for output variables to be stored?

31. write the outputs for {and ec2 public ip}, {ec2 ami}, {vpc id}, {ec2 id}

32. - what command can you use to view all of your outputs
    - what if you wanted to view only one output, e.g ec2_public_ip_address
    - display your output on in json format
    - save the output in json format
    - how do you hide an output from showing in the terminal

33. - what is terraform state
    - in what file is the terraform state stored

34. - how do you see all the resources in your terraform state
    - explain this command terraform show | grep -A20 aws_vpc
    - use show to see a specific resource
    - use show to see the content of a plan file

35. terraform state 
    - list only the resources in the state file
    - use the state command to see just one resource
    - use state to view the state in json format
    - list state resource by Module. {tip: use the grep command}

36. running commands on you ec2 instance
    - which is the best for running commands on your ec2 instance (cloud-init or ansible)
    - Read: read about some of the highlights of using cloud-init
    - create a cloud-init configuration in yaml called "web-app-template.yaml"
    - explain the code in your cloud-init configuration
    - use the cloud-init in your ec2
    - create an entry-script.sh configuration that can be used in your ec2 instance

37. The teacher copied the terraform code(i.e the terraform files) from another project into a
    new folder/project and then he modified the "aws_instance" resource to use cloud-init to setup
    the aws_instance.
    So he did: "terraform init", then he did: "terraform apply -auto-approve" and he got an error
    saying: "Error importing EC2 key pair (testing_ssh_key): InvalidKeyPair.Duplicate: The KeyPair
    'testing_ssh_key' already exists"
    Now:
    - explain why this error occurred
    - how you solve the above problem
    - Read: read how you can find your key pairs on aws

38. Now that you've resolved the issue with your "aws_key_pair" and your "tf apply -auto-approve"
    was successful, do the following:
    -
    - login to your ec2 instance
    - verify if all the users were created successfully
    - verify if all the groups were created successfully
    - check if your httpd is running
    - check if your docker is running
    - use your browser and confirm that the ec2 instance is accessible from the web using the
        ec2 PublicIP, use PublicIP = 35.159.20.29
    - use your browser and confirm that the docker on your ec2 instance is running, visit the
        port 8080 to confirm this, use PublicIP = 35.159.20.29

39: Read: read about how to troubleshot & logging in terraform

================
SECTION 2 BEGINS
================

1. List the different types in terraform
    - List simple types
    - List Complex types
    - List structural types

