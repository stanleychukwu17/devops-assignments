full_revision: 20 May 2025
full_revision: 22 June 2025

NOTE: if you ever wanted to to work with the traditional three.js (i.e the plain three.js with r3f),
  please 

1 - Read: introduction
  - Read: installing react-three-fibre 
  - Read: see some of the ecosystem of react-three-fibre

2 Transforming objects
  - Name 3 ways to to transform an object
  - Read a little about object transformation
  - where do all 3 axis face in 3.js, draw the axis
  - How do you make the camera look at an object

2.1 Some General Knowledge
  - Read: types of Geometries and their args
  - Math.PI in rotation = 360deg

3 Test your Knowledge, work on a simple 3.js scene (do not use A.I assistance)
  - open the ./task/3/src/App.tsx and write the answer to the questions below:

  - run pnpm i or npm i to install dependencies and packages
  - import all you need from react and the three.js package (e.g Canvas, * as THREE)
  - you'll be needing SoftShadows, OrbitControls & MeshWobbleMaterial from drei

  - create a Box component that returns a box Geometry
    - let the component receive 4 arguments
      "position": for the position of the box on the 3D scene
      "args": the dimensions of the box
      "color": the color for each box
      "hoverColor": the color to transform to when hovered over
      -
    - let the Box castShadow (i.e use the castShadow prop)
    - use useFrame delta to rotate the box on its x-axis & y-axis
    - when the box is clicked on, toggle the scale of the box
    - when the box is hovered on, change the material color of the box

  - create the main App component and add your Canvas component
    - use shadow prop in the Canvas component
    - use camera prop in the Canvas component
      - let the camera use a fov of 60 (fov is field of view)
      - camera position should be x:-5, y:2, z:10
    - render your "SoftShadows" from drei inside the Canvas component

  - add a group element (inside you'll render the boxes and the planeGeometry for your shadow)
    - using the Box component, render 3 boxes in the group
    - add a new planeGeometry mesh in the group
      - use the receiveShadow prop
      - let it use a shadowMaterial with props attach="material" & opacity=0.3 or 1.3
      - rotate the planeGeometry on the y-axis by -180deg so that it would be the flat plane
      - bring the plane downward so that it is below the boxes (i.e position downward on the y-axis)

  - add an ambientLight to the scene, use (0.3 or Math.PI/2) for the intensity
  - add a directionalLight mainly for the shadow and use the following props:
    - let this light castShadow
    - position: x:0, y:10, z:0
    - intensity: (1.5 or Math.PI/3)

  - add pointLight and use the following props
    - position: x:-10, y:0, z: -20
    - intensity: 0.5

  - add pointLight and use the following props
    - position: x:0, y:-10, z: 0
    - intensity: 1.5

  - if everything is okay, delete the node-modules folder

4. useFrame hook
  - what can you say about the useFrame hook
  - what can you say about the "state" and "delta" callback arguments
  - advanced usage, how do you use the useFrame hook with priority
  - Read: some of the methods and properties available in the "state" callback arguments

5. useFrame exercise